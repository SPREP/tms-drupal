<?php

/**
 * @file
 */

use Drupal\met_warning\METWarningInterface;
use Drupal\node\NodeInterface;
use Drupal\webform\WebformSubmissionInterface;

/**
 * @file
 * Primary module hooks for met_service module.
 */

/**
 * Implements hook_ENTITY_TYPE_insert() for node.
 */
function met_service_node_insert(NodeInterface $node) {
  switch ($node->bundle()) {
    case 'event':
      // Send push notification new event
      // _sendEventNotification();
      break;
  }
}

/**
 *
 */
function _sendEventNotification() {
  // Do something with warning entity (send firebase message)
  $messageService = \Drupal::service('firebase.message');
  $messageService->setNotification([
    'title' => 'New Event',
    'body' => "There's a new event has been created",
    'badge' => 1,
    // 'icon' => 'https://64f1-2001-8003-47a8-6700-180-b34d-6c2f-9799.ngrok-free.app/sites/default/files/warning.jpg',
    'sound' => 'default',
    // 'click_action' => 'optional-action',
  ]);
  $messageService->setData([
    'event' => 1,
    'warning' => 0,
  ]);
  $messageService->setTopics(['tonga']);
  $messageService->setOptions(['priority' => 'normal']);
  $messageService->send();
}

/**
 * Implements hook_ENTITY_TYPE_insert() for node.
 */
function met_service_met_warning_insert(METWarningInterface $warning) {
  // Temporary teurn off firebase.
  return;

  // Do something with warning entity (send firebase message)
  $messageService = \Drupal::service('firebase.message');
  $messageService->setNotification([
    'title' => 'New Warning',
    'body' => "There's a new warning has been issued",
    'badge' => 1,
    // 'icon' => 'https://64f1-2001-8003-47a8-6700-180-b34d-6c2f-9799.ngrok-free.app/sites/default/files/warning.jpg',
    'sound' => 'default',
    // 'click_action' => 'optional-action',
  ]);
  $messageService->setData([
    'event' => 0,
    'warning' => 1,
  ]);
  $messageService->setTopics(['tonga']);
  $messageService->setOptions(['priority' => 'high']);
  $messageService->send();

}

// 10 days

/**
 * Implements hook_ENTITY_TYPE_presave() for webform_submission.
 */
function met_service_webform_submission_presave(WebformSubmissionInterface $webform_submission) {
  if ($webform_submission->getWebform()->id() != '10_days_forecast') {
    return;
  }
  // Webform data.
  $data = $webform_submission->getData();

  $msg = print_r($data, TRUE);
  \Drupal::logger('finau')->debug('Finau test ' . $msg);

  // Webform date field value is a string in Y-m-d H:i:s format.
  // $value = $data['datetime'];.
  // find out the location.
  $csv_file_name = '10days.csv';
  $absolute_path = \Drupal::service('file_system')->realpath('private://' . $csv_file_name);
  $fp = fopen($absolute_path, 'w');

  $data = ['finau'];
  fputcsv($fp, $data);

  fclose($fp);

}
